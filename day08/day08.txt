구조체 / 클래스 메모리 구조
생성자 / 소멸자

생성자 : 부모 ==> 자식
소멸자 : 자식 ==> 부모

    Test(){ // 생성자

    }

    ~Test(){ // 소멸자 // 메모리 제거

    }

복사 (생성자)
    int a(int b){ -> a에 1을 복사한다.

    }
    int main(void){
        a(1);
    }
------------class7.cpp----------------
객체에 의해서 복사된다.

	CTest t1(t); //복사 생성
	CTest t2 = t; // 복사 생성
	CTest t3; t3 = t; // 먼저 생성하고 t를 받아온다.

객체가 다른 객체로부터 복사생성이 되는 경우 복사 생성자가 호출되고, 대입될 경우에는  복사 대입 연산자가 호출된다는 사실이다.

복사 생성자는 생정자의 중복정의이다.
    ClassName(const ClassName& obj){

    }

복사 생성자 : 다른 객체와 똑같은 객체를 생성할 때 사용한다.
    class Cell{
        public:
        Cell(const Cell& obj); 
    }
    // 생성한 객체에서 객체가 복사되었다...?
    Cell::Cell(const Cell& cel)
        :mValue(cel.mValue){

        }

객체 복사(복사된 객체)가 기존의 객체를 바꿔서는 안되므로 복사할 객체를 const 참조 타입으로 복사 생성자에게 전달

생성자 안에서 원본 객체에 있는 데이터 멤버를 모두 복사해서 사용가능하다.
--------------------------------------------
함수에 객체를 값으로 전달하거나 함수가 객체를 값으로 반환할 때 객체를 암묵적으로 복사된다.

vector <int> vi;
double d;
d = median(vi); // vi를 median함수의 매개변수로 복사 

string line;
vector<string> words = split(line); //값을 복사한다. 

vector<Student_info> vs;
vector<Student_info> v2 = vs ;

객체(=변수)는
    정의되면 그 객체를 다른 객체에게 대입될 수 있다.
    정의되면 그 객체를 다른 객체에게 그 객체가 가지고 있는 멤버들을 대입할 수 있다.
    정의되면 그 객체를 다른 객체에게 자신이 가지고 있는 멤버들을 복사하여 전달한다.

변수는
    정의되면 그 변수를 다른 변수에게 대입될 수 있다.
    정의되면 그 변수를 다른 변수에게 그 객체가 가지고 있는 값을 대입할 수 있다.
    정의되면 그 변수를 다른 변수에게 자신이 가지고 있는 값을 복사하여 전달한다.

변수의 타입이 클래스인 경우 방식이 다르게 변한다.
초기화 방식에 따라서 동작이 달라진다는 의미이다.

객체 ==> 생성자

복사 생성과 일반 객체 생성의 차이
    일반 객체 -> 

    복사 생성->
        암시적 / 묵시적

        생성자가 선언이 안되어 잇다면 컴파일러는 암시적으로 기본 생성자를 정의하고 그에 따라서 기본적으로 복사 생성자도 암시적으로 디폴트 복사 생성자를 정의한다.

--------------class9.cpp------------------
자식-> 디폴트 생성자와 암시적으로 복사생성자가 생성된다.
순서: 부모의 복사 생성자를 먼저 호출