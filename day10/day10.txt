2월 15일 저녁 구글 드라이버
C++ 자료구조 전까지 

C++ : 
    1. private : 외부 함수에 자기 자신의 멤버 접근 가능하지 않도록 숨긴다. (은닉화)
    2. protected : 외부 함수에 자기 자신의 멤버 접근 가능하지 않도록 숨긴다.
                   그러나 파생(자식) 클래스이 멤버 함수에 대해서는 접근 가능하게 한다.
    3. public : 외부 함수에 자기 자신의 멤버를 접근 가능하게 한다.

protected :
    외부함수에게는 비공개
    상속(파생) 관계에서는 파생 클래스의 멤버 함수에게는 공개

    ∴ protected는 public과 가깝다

CChild& e = (CChild&)t; -> 나중에 자주 보이는 패턴 -> 클래스의 형변환

**************************** 상속 접근 지정자도 멤버접근 지정자와 같다.
                             생략할 경우 기본은 private이다.

1. 접근 지정자에 의한 클래스 멤버에 private이 지정되어있으면     외부 함수에서 해당 멤버에 접근 할 수 없다
2. protected 역시 파생 클래스의 멤버 함수를 제외하고서는        외부 함수에서 해당 멤버에 접근 할 수 없다.

friend -> 접근지정자를 무시하고 사용가능

C++ 상속 되지 않는 함수가 존재
    생성자, 소멸자
    대입 연산자 함수

1. 복사 생성자
2. 다중 상속 (C++) : 다이아몬드 구조, 중복 
    파생된 것이 "가상 기저클래스", 가상 기저 클래스의 생성자