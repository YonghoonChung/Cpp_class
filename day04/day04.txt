class
-----------------------------------------------------------
object : 정적 객체
(생성자)
    struct score{
        int kor;
        int eng;
        int math;
    };

    int main(void){
        struct score score1 = {90,80,70};
        struct score *ps = &score1;

        //printf("국어 : %d\n", ps -> kor);
        printf("국어 : %d\n", (*ps).kor); 접근
        printf("영어 : %d\n", ps->eng);
        printf("수학 : %d\n", ps->math);
    }

(*ps).kor vs ps->eng
-----------------------------------------------------------

클래스
    객체 : 멤버 필드(변수), 멤버 함수(행동)

    전자계산기:  멤버필드 -> 숫자, 멤버함수 -> +-*/

:: scope연산자
    클래스 외부에서 함수를  정의한다.

    Car::getSpeed() -> 클래스의 주소를 스택메모리에 저장한다
        복귀주소를 갖고 있다 -> 일반함수가 아니라 클래스의 함수라는 것을 알수있다./*

inline함수
    클래스의 함수가 된다.

int value;
double sqrt(double); -> 함수

...................................................

포인터 

Struct score *p = &test;
    구조체 이름 : score
    *p는 test의 주소를 갖는데 score를 포인팅

(*p).kor -> 연산자 우선순위...
    포인터 주소를 갖고 찾아간다.

    (*구조체 변수 간접 접근). 구조체 변수의 kor 멤버 접근

    (*p).kor         p->kor
    (*p).eng         p->eng
    (*p).math        p->math

p->kor
p : 구조체 포인터
-> : 간접 멤버 접근 연산자
math : 구조체 멤버 변수

* : 연산자
-> : 연산자